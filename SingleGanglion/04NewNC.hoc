objref prob
objref Glurrodbip2A2[nrodbipx][nrodbipy],Glurconebip2GAN[nconebipx][nconebipy]
objref CellConection[MAXNUMBERCONNECTIONS], GAP_rod2cone[MAXNUMBERCONNECTIONS] 
objref a2GAPa2[MAXNUMBERCONNECTIONS],GAP_A2conebip[MAXNUMBERCONNECTIONS]
prob = new Random(seed)


  print "Connecting cells"

//=================================================================
//                Gap Juntions in A2 layer		 				 //		
//=================================================================

NUMBERGAPS = 0
proc A2_gaps() {

 for i = 0, na2x-1 {
    for j = 0, na2y-2 {
       
       aprob = prob.uniform(0, 1) 
       if (aprob <= $1 ) { 

    a2GAPa2[NUMBERGAPS] = new Gap()
	A2_cell[i][j].soma a2GAPa2[NUMBERGAPS].src(0.95)    
	A2_cell[i][j+1].soma a2GAPa2[NUMBERGAPS].target(0.95)
	a2GAPa2[NUMBERGAPS].g(2) 
        
 
      NUMBERGAPS = NUMBERGAPS + 1

      }
   }
 }

 for j = 0, na2y-1 {
    for i = 0, na2x-2 {

       aprob = prob.uniform(0, 1)
       if (aprob <= $1 ) {

        a2GAPa2[NUMBERGAPS] = new Gap()
	A2_cell[i][j].soma a2GAPa2[NUMBERGAPS].src(0.95)    
	A2_cell[i+1][j].soma a2GAPa2[NUMBERGAPS].target(0.95)
	a2GAPa2[NUMBERGAPS].g(2) 

      NUMBERGAPS = NUMBERGAPS + 1
      }
    }
  }

// Gap Juntions A2-Cone Bipolar , each A2 coupled to 2 bipolar Sterling et al.1988.

 NUMBERGAPS = 0
  for i = 0, nconebipx-1 {
    for j = 0, nconebipy-1 {
    
	//ii = int(prob.uniform(0, na2x))
	//if (ii == na2x ) { ii=na2x-1 }
    //jj = int(prob.uniform(0, na2y))
	//if (jj == na2y ) { jj=na2y-1 }
	GAP_A2conebip[NUMBERGAPS] = new Gap()
	A2_cell[i][j].soma GAP_A2conebip[NUMBERGAPS].src(0.95)    //Modified
	cone_bip[i][j].soma GAP_A2conebip[NUMBERGAPS].target(0.95)
    GAP_A2conebip[NUMBERGAPS].g(0.5) 

	NUMBERGAPS = NUMBERGAPS + 1
      
      // } 
      //}
    }
  }


} // end proc

//=================================================================
//                Glutamate Chemical synapses		         //		
//=================================================================

proc Glursyn () {

  // Glutamate Synapse Rod Bipolar - A2

  for i = 0, nrodbipx-1 {
    for j = 0, nrodbipy-1 {
      for k = 1, rodbiptoa2 {
        
    if (i == 0 || i == 1) { ii = 0}
    if (i == 2 || i == 3) { ii = 1}
    if (i == 4 || i == 5) { ii = 2}
    if (i == 6 || i == 7) { ii = 3}
    if (j == 0 || j == 1) { jj = 0}
    if (j == 2 || j == 3) { jj = 1}
    if (j == 4 || j == 5) { jj = 2}
    if (j == 6 || j == 7) { jj = 3}       
        
    Glurrodbip2A2[i][j] = new GradSyn_bip_gan()					
   	A2_cell[ii][jj].soma Glurrodbip2A2[i][j].loc(1)		// Post synaptic compartment	
   	setpointer Glurrodbip2A2[i][j].V_pre, rod_bip[i][j].soma.v(1)	
	Glurrodbip2A2[i][j].e = 0
	Glurrodbip2A2[i][j].V_thr = -37.4
       
      }
    }
  }
  
  // Glutamate Synapse Cone Bipolar - Gan

  for i = 0, nconebipx-1 {
    for j = 0, nconebipy-1 {
      for k = 1, conebiptogan {
        
    if (i == 0 || i == 1) { ii = 0}
    if (i == 2 || i == 3) { ii = 1}
    if (j == 0 || j == 1) { jj = 0}
    if (j == 2 || j == 3) { jj = 1}

    Glurconebip2GAN[i][j] = new GradSyn_bip_gan()						
   	GAN[ii][jj].soma Glurconebip2GAN[i][j].loc(1)		// Post synaptic compartment	
   	setpointer Glurconebip2GAN[i][j].V_pre, cone_bip[i][j].soma.v(1)	
	Glurconebip2GAN[i][j].e = 0
	Glurconebip2GAN[i][j].V_thr = -37.28
       
      }
    }
  }


} // end proc